<project name="Netting" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
      <fail message="Please build ImageJ's ij.jar first">
      <condition>
        <not>
          <available file="lib/ij.jar" type="file"/>
        </not>
      </condition>
    </fail>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}"
           destdir="${build}"
           source="1.5"
           target="1.5"
           optimize="true"
           debug="true"
           deprecation="true"
           includeantruntime="false">

        <classpath>
            <pathelement location="lib/ij.jar"/>
        </classpath>
      </javac>
  </target>

    <target name="dist" depends="compile" description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/Netting_${DSTAMP}.jar" basedir="${build}">
        <fileset dir="." includes="plugins.config" />
        <manifest>
            <attribute name="Built-By" value="${user.name}"/>
 		</manifest>
    </jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

</project>