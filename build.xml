<project name="Netting" default="all" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="user.name" value="Brandon Hurr" />
    
    
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
      <fail message="Please build ImageJ's ij.jar first">
      <condition>
        <not>
          <available file="lib/ij.jar" type="file"/>
        </not>
      </condition>
    </fail>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}"
           destdir="${build}"
           source="1.5"
           target="1.5"
           optimize="true"
           debug="true"
           deprecation="true"
           includeantruntime="false">

        <classpath>
            <pathelement location="lib/ij.jar"/>
        </classpath>
      </javac>
  </target>

    <target name="dist" depends="compile" description="generate the distribution" >
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <!-- Name requires _ in order to be put into imageJ menus-->
        <jar jarfile="${dist}/Netting_${DSTAMP}.jar" basedir="${build}">
            <fileset dir="." includes="plugins.config" />
            <fileset dir="${build}" includes="**/*.*" />
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
            </manifest>
        </jar>
    </target>

  <target name="clean" description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
  </target>
    
    <target name='all' description='Create all build artifacts.'
        depends='init, compile, dist, clean'>
        <echo>Finished creating all build artifacts.</echo>
    </target>

</project>